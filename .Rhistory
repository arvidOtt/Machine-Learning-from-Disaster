install.packages("RWeka")
library(RWeka)
library(rJava)
library(RWeka)
library(RWeka)
subject_name <- c("John Doe", "Jane Doe", "Steve Graves")
temperature <- c(98.1, 98.6, 101.4)
flu_status <- c(FALSE, FALSE, TRUE)
temperature[2]
## examples of accessing items in vector
# include items in the range 2 to 3
temperature[2:3]
# exclude item 2 using the minus sign
temperature[-2]
gender <- factor(c("MALE", "FEMALE", "MALE"))
gender
blood <- factor(c("O", "AB", "A"),
levels = c("A", "B", "AB", "O"))
blood
subject_name[1]
temperature[1]
flu_status[1]
gender[1]
blood[1]
subject1 <- list(fullname = subject_name[1],
temperature = temperature[1],
flu_status = flu_status[1],
gender = gender[1],
blood = blood[1])
View(subject1)
subject1
subject1[2]
subject1[c("temperature", "flu_status")]
pt_data <- data.frame(subject_name, temperature, flu_status, gender,
blood, stringsAsFactors = FALSE)
pt_data
pt_data$subject_name
pt_data[c("temperature", "flu_status")]
pt_data[c(1, 3), c(2, 4)]
pt_data[, 1]
pt_data[1, ]
pt_data[ , ]
pt_data[c(1, 3), c("temperature", "gender")]
pt_data[-2, c(-1, -3, -5)]
m <- matrix(c('a', 'b', 'c', 'd'), nrow = 2)
m
usedcars <- read.csv("usedcars.csv", stringsAsFactors = FALSE)
library(readr)
usedcars <- read_csv("Desktop/ML with R/chapter 2/usedcars.csv")
View(usedcars)
str(usedcars)
View(usedcars)
View(usedcars)
# summarize numeric variables
summary(usedcars$year)
summary(usedcars[c("price", "mileage")])
View(usedcars)
View(usedcars)
range(usedcars$price)
diff(range(usedcars$price))
IQR(usedcars$price)
quantile(usedcars$price)
quantile(usedcars$price, seq(from = 0, to = 1, by = 0.20))
boxplot(usedcars$price, main="Boxplot of Used Car Prices",
ylab="Price ($)")
boxplot(usedcars$mileage, main="Boxplot of Used Car Mileage",
ylab="Odometer (mi.)")
hist(usedcars$price, main = "Histogram of Used Car Prices",
xlab = "Price ($)")
hist(usedcars$mileage, main = "Histogram of Used Car Mileage",
xlab = "Odometer (mi.)")
var(usedcars$price)
sd(usedcars$price)
var(usedcars$mileage)
sd(usedcars$mileage)
table(usedcars$year)
table(usedcars$model)
table(usedcars$color)
model_table <- table(usedcars$model)
prop.table(model_table)
color_table <- table(usedcars$color)
color_pct <- prop.table(color_table) * 100
round(color_pct, digits = 1)
plot(x = usedcars$mileage, y = usedcars$price,
main = "Scatterplot of Price vs. Mileage",
xlab = "Used Car Odometer (mi.)",
ylab = "Used Car Price ($)")
# new variable indicating conservative colors
usedcars$conservative <-
usedcars$color %in% c("Black", "Gray", "Silver", "White")
table(usedcars$conservative)
CrossTable(x = usedcars$model, y = usedcars$conservative)
install.packages("gmodels")
CrossTable(x = usedcars$model, y = usedcars$conservative)
library(gmodels)
CrossTable(x = usedcars$model, y = usedcars$conservative)
#Train Decision Tree
library(C50)
setwd("~/Kaggle/Titanic/Machine-Learning-from-Disaster")
train <- read.csv("./Data/train_p.csv")
train$Survived <- factor(train$Survived)
treeModel <- C5.0(train[, -c(1:3)], train$Survived, trials = 12, control = C5.0Control(noGlobalPruning = FALSE))
summary(treeModel)
#Evaluate Decision Tree
test <- read.csv("./Data/test_p.csv")
pred <- predict(treeModel, test[,-c(1:2)])
result <- data.frame(PassengerId=test$PassengerId, Survived=pred)
write.csv(result[,-1],file = "./Data/prediction.csv")

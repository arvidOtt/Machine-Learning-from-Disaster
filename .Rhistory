grepl("Master.",titanic$Name) ~ "Master",
grepl("Dr.",titanic$Name) ~ "Dr",
grepl("Rev.",titanic$Name) ~ "Rev",
TRUE ~ "Other"
)
#Extract familyname to match couples
#Pobably bad idea because wife neednt be in the same dataset
#titanic$Name <- as.character(titanic$Name)
#titanic$FamilyName <- case_when(
#  titanic$Title == "Mrs" ~ gsub("\\(.*", "", titanic$Name),
#  titanic$Title == "Mr" ~ titanic$Name,
#  TRUE ~ ""
#)
#titanic$FamilyName <- gsub("Mrs.","Mr.", titanic$FamilyName)
#titanic$FamilyName <- factor(gsub(" ", "", titanic$FamilyName, fixed = TRUE))
#occurences <- table(unlist(titanic$FamilyName))
#titanic$FamilyNameCount <- occurences[titanic$FamilyName]
#rm(occurences)
#titanic$TravelsWithPartner <- ifelse(titanic$FamilyNameCount == 2,1,0)
#titanic$TravelsWithPartner <- factor(titanic$TravelsWithPartner)
#drops <- c("FamilyName", "FamilyNameCount")
#titanic <- titanic[, !(names(titanic) %in% drops)]
#rm(drops)
#Fill missing Ages with mean age
titanic$Age[is.na(titanic$Age)] <- mean(titanic$Age, na.rm = TRUE)
#Extract additional info from cabin
#titanic$CabinLetter <- substr(titanic$Cabin,1,1)
#titanic$CabinLetter <- factor(titanic$CabinLetter)
#levels(titanic$CabinLetter)[1] = "missing"
#levels(titanic$CabinLetter)
#titanic$CabinNumber <- gsub("A|B|C|D|E|F|G|T","", titanic$Cabin)
#titanic$CabinNumber <- as.numeric(titanic$CabinNumber)
#Extract additional info from tickets
#titanic$TicketClass <- gsub(" |1|2|3|4|5|6|7|8|9|0|\\.|/","", titanic$Ticket)
#titanic$TicketClass <- sapply(substr(titanic$TicketClass,1,4), tolower)
#titanic$TicketClass <- factor(titanic$TicketClass)
#Missing Factor Levels
levels(titanic$Cabin)[1] = "missing"
levels(titanic$Embarked)[1] = "missing"
#Save data
#write.csv(titanic, file = "./Data/train_p.csv")
write.csv(titanic, file = "./Data/test_p.csv")
#Load Data
setwd("~/Kaggle/Titanic/Machine-Learning-from-Disaster")
train <- read.csv("./Data/train_p.csv",header = TRUE, fileEncoding = "UTF-8")
#Prepare for model
train$Survived <- factor(train$Survived)
train$Pclass <- factor(train$Pclass)
drops <- c("Ticket", "Name","Cabin", "Embarked")
train <- train[, !(names(train) %in% drops)]
rm(drops)
#Decision Tree
library(C50)
treeModel <- C5.0(train[, -c(1:3)], train$Survived)
summary(treeModel)
#Load test data
test <- read.csv("./Data/test_p.csv")
#Prepare data
test$Pclass <- factor(test$Pclass)
drops <- c("Ticket", "Name","Cabin", "Embarked")
train <- train[, !(names(train) %in% drops)]
rm(drops)
drops <- c("Ticket", "Name","Cabin", "Embarked")
test <- test[, !(names(test) %in% drops)]
rm(drops)
pred <- predict(treeModel, test[,-c(1:2)])
result <- data.frame(PassengerId=test$PassengerId, Survived=pred)
write.csv(result,file = "./Data/prediction.csv", row.names = FALSE)
View(result)
treeModel <- C5.0(train[, -c(1:3)], train$Survived, C5.0Control(minCases = 10))
treeModel <- C5.0(train[, -c(1:3)], train$Survived, trials=10,C5.0Control(minCases = 10))
treeModel <- C5.0(train[, -c(1:3)], train$Survived, control=C5.0Control(minCases = 10))
summary(treeModel)
#Load test data
test <- read.csv("./Data/test_p.csv")
#Prepare data
test$Pclass <- factor(test$Pclass)
drops <- c("Ticket", "Name","Cabin", "Embarked")
test <- test[, !(names(test) %in% drops)]
rm(drops)
#Evaluate Model
pred <- predict(treeModel, test[,-c(1:2)])
result <- data.frame(PassengerId=test$PassengerId, Survived=pred)
write.csv(result,file = "./Data/prediction.csv", row.names = FALSE)
treeModel <- C5.0(train[, -c(1:3)], train$Survived, boost=12)
summary(treeModel)
treeModel <- C5.0(train[, -c(1:3)], train$Survived, boost=20)
summary(treeModel)
treeModel <- C5.0(train[, -c(1:3)], train$Survived, boost=30)
summary(treeModel)
treeModel <- C5.0(train[, -c(1:3)], train$Survived, boost=5)
summary(treeModel)
treeModel <- C5.0(train[, -c(1:3)], train$Survived)
summary(treeModel)
treeModel <- C5.0(train[, -c(1:3)], train$Survived, control = C5.0Control(winnow = TRUE))
summary(treeModel)
treeModel <- C5.0(train[, -c(1:3)], train$Survived, control = C5.0Control(minCases = 20))
summary(treeModel)
treeModel <- C5.0(train[, -c(1:3)], train$Survived, control = C5.0Control(minCases = 20))
summary(treeModel)
#Load test data
test <- read.csv("./Data/test_p.csv")
#Prepare data
test$Pclass <- factor(test$Pclass)
drops <- c("Ticket", "Name","Cabin", "Embarked")
test <- test[, !(names(test) %in% drops)]
rm(drops)
#Evaluate Model
pred <- predict(treeModel, test[,-c(1:2)])
result <- data.frame(PassengerId=test$PassengerId, Survived=pred)
write.csv(result,file = "./Data/prediction.csv", row.names = FALSE)
treeModel <- C5.0(train[, -c(1:3)], train$Survived,trials = 10, control = C5.0Control(minCases = 20))
summary(treeModel)
treeModel <- C5.0(train[, -c(1:3)], train$Survived,trials = 5, control = C5.0Control(minCases = 20))
summary(treeModel)
treeModel <- C5.0(train[, -c(1:3)], train$Survived,trials = 15, control = C5.0Control(minCases = 20))
summary(treeModel)
treeModel <- C5.0(train[, -c(1:3)], train$Survived,trials = 12, control = C5.0Control(minCases = 20))
summary(treeModel)
#Load test data
test <- read.csv("./Data/test_p.csv")
#Prepare data
test$Pclass <- factor(test$Pclass)
drops <- c("Ticket", "Name","Cabin", "Embarked")
test <- test[, !(names(test) %in% drops)]
rm(drops)
#Evaluate Model
pred <- predict(treeModel, test[,-c(1:2)])
result <- data.frame(PassengerId=test$PassengerId, Survived=pred)
write.csv(result,file = "./Data/prediction.csv", row.names = FALSE)
treeModel <- C5.0(train[, -c(1:3)], train$Survived, control = C5.0Control(minCases = 40))
summary(treeModel)
#Load test data
test <- read.csv("./Data/test_p.csv")
#Prepare data
test$Pclass <- factor(test$Pclass)
drops <- c("Ticket", "Name","Cabin", "Embarked")
test <- test[, !(names(test) %in% drops)]
rm(drops)
#Evaluate Model
pred <- predict(treeModel, test[,-c(1:2)])
result <- data.frame(PassengerId=test$PassengerId, Survived=pred)
write.csv(result,file = "./Data/prediction.csv", row.names = FALSE)
treeModel <- C5.0(train[, -c(1:3)], train$Survived, control = C5.0Control(minCases = 50))
summary(treeModel)
#Load test data
test <- read.csv("./Data/test_p.csv")
#Prepare data
test$Pclass <- factor(test$Pclass)
drops <- c("Ticket", "Name","Cabin", "Embarked")
test <- test[, !(names(test) %in% drops)]
rm(drops)
#Evaluate Model
pred <- predict(treeModel, test[,-c(1:2)])
result <- data.frame(PassengerId=test$PassengerId, Survived=pred)
write.csv(result,file = "./Data/prediction.csv", row.names = FALSE)
#Load dataset
setwd("~/Kaggle/Titanic/Machine-Learning-from-Disaster")
#titanic <- read.csv("./Data/train.csv")
titanic <- read.csv("./Data/test.csv")
#Extract Title
library(dplyr)
titanic$Title <- case_when(
grepl("Mrs.",titanic$Name) ~ "Mrs",
grepl("Mr.",titanic$Name) ~ "Mr",
grepl("Miss.",titanic$Name) ~ "Miss",
grepl("Master.",titanic$Name) ~ "Master",
grepl("Dr.",titanic$Name) ~ "Dr",
grepl("Rev.",titanic$Name) ~ "Rev",
TRUE ~ "Other"
)
#Load dataset
setwd("~/Kaggle/Titanic/Machine-Learning-from-Disaster")
#titanic <- read.csv("./Data/train.csv")
titanic <- read.csv("./Data/test.csv")
#Extract Title
library(dplyr)
titanic$Title <- case_when(
grepl("Mrs.",titanic$Name) ~ "Mrs",
grepl("Mr.",titanic$Name) ~ "Mr",
grepl("Miss.",titanic$Name) ~ "Miss",
grepl("Master.",titanic$Name) ~ "Master",
grepl("Dr.",titanic$Name) ~ "Dr",
grepl("Rev.",titanic$Name) ~ "Rev",
TRUE ~ "Other"
)
View(titanic)
#Extract additional info from tickets
titanic$TicketClass <- gsub("!( |1|2|3|4|5|6|7|8|9|0)","", titanic$Ticket)
#Extract additional info from tickets
titanic$TicketClass <- gsub('\\D+','', titanic$Ticket)
titanic$TicketClass <- substr(titanic$TicketClass,1,2)
table(titanic$TicketClass)
#Load dataset
setwd("~/Kaggle/Titanic/Machine-Learning-from-Disaster")
titanic <- read.csv("./Data/train.csv")
#titanic <- read.csv("./Data/test.csv")
#Extract Title
library(dplyr)
titanic$Title <- case_when(
grepl("Mrs.",titanic$Name) ~ "Mrs",
grepl("Mr.",titanic$Name) ~ "Mr",
grepl("Miss.",titanic$Name) ~ "Miss",
grepl("Master.",titanic$Name) ~ "Master",
grepl("Dr.",titanic$Name) ~ "Dr",
grepl("Rev.",titanic$Name) ~ "Rev",
TRUE ~ "Other"
)
#Extract familyname to match couples
#Pobably bad idea because wife neednt be in the same dataset
#titanic$Name <- as.character(titanic$Name)
#titanic$FamilyName <- case_when(
#  titanic$Title == "Mrs" ~ gsub("\\(.*", "", titanic$Name),
#  titanic$Title == "Mr" ~ titanic$Name,
#  TRUE ~ ""
#)
#titanic$FamilyName <- gsub("Mrs.","Mr.", titanic$FamilyName)
#titanic$FamilyName <- factor(gsub(" ", "", titanic$FamilyName, fixed = TRUE))
#occurences <- table(unlist(titanic$FamilyName))
#titanic$FamilyNameCount <- occurences[titanic$FamilyName]
#rm(occurences)
#titanic$TravelsWithPartner <- ifelse(titanic$FamilyNameCount == 2,1,0)
#titanic$TravelsWithPartner <- factor(titanic$TravelsWithPartner)
#drops <- c("FamilyName", "FamilyNameCount")
#titanic <- titanic[, !(names(titanic) %in% drops)]
#rm(drops)
#Fill missing Ages with mean age
titanic$Age[is.na(titanic$Age)] <- mean(titanic$Age, na.rm = TRUE)
#Extract additional info from cabin
#titanic$CabinLetter <- substr(titanic$Cabin,1,1)
#titanic$CabinLetter <- factor(titanic$CabinLetter)
#levels(titanic$CabinLetter)[1] = "missing"
#levels(titanic$CabinLetter)
#titanic$CabinNumber <- gsub("A|B|C|D|E|F|G|T","", titanic$Cabin)
#titanic$CabinNumber <- as.numeric(titanic$CabinNumber)
#Extract additional info from tickets
titanic$TicketClass <- gsub('\\D+','', titanic$Ticket)
titanic$TicketClass <- substr(titanic$TicketClass,1,2)
table(titanic$TicketClass, titanic$Survived)
titanic$TicketClass <- substr(titanic$TicketClass,1,1)
table(titanic$TicketClass, titanic$Survived)
table(titanic$TicketClass, titanic$Pclass)
titanic$TicketClass <- gsub('4|5|6|7|8|9','4', titanic$Ticket)
table(titanic$TicketClass, titanic$Pclass)
#Extract additional info from tickets
titanic$TicketClass <- gsub('\\D+','', titanic$Ticket)
titanic$TicketClass <- substr(titanic$TicketClass,1,1)
titanic$TicketClass <- gsub('4|5|6|7|8|9','4', titanic$TicketClass)
table(titanic$TicketClass, titanic$Pclass)
table(titanic$TicketClass, titanic$Survived)
titanic$TicketClass <- substr(titanic$TicketClass,1,2)
table(titanic$TicketClass, titanic$Survived)
#Extract additional info from tickets
titanic$TicketClass <- gsub('\\D+','', titanic$Ticket)
table(titanic$TicketClass, titanic$Survived)
#Extract additional info from tickets
titanic$TicketClass <- gsub('\\D+','', titanic$Ticket)
titanic$TicketClass <- substr(titanic$TicketClass,1,2)
table(titanic$TicketClass, titanic$Survived)
#Load dataset
setwd("~/Kaggle/Titanic/Machine-Learning-from-Disaster")
titanic <- read.csv("./Data/train.csv")
#titanic <- read.csv("./Data/test.csv")
#Extract Title
library(dplyr)
titanic$Title <- case_when(
grepl("Mrs.",titanic$Name) ~ "Mrs",
grepl("Mr.",titanic$Name) ~ "Mr",
grepl("Miss.",titanic$Name) ~ "Miss",
grepl("Master.",titanic$Name) ~ "Master",
grepl("Dr.",titanic$Name) ~ "Dr",
grepl("Rev.",titanic$Name) ~ "Rev",
TRUE ~ "Other"
)
#Extract familyname to match couples
#Pobably bad idea because wife neednt be in the same dataset
#titanic$Name <- as.character(titanic$Name)
#titanic$FamilyName <- case_when(
#  titanic$Title == "Mrs" ~ gsub("\\(.*", "", titanic$Name),
#  titanic$Title == "Mr" ~ titanic$Name,
#  TRUE ~ ""
#)
#titanic$FamilyName <- gsub("Mrs.","Mr.", titanic$FamilyName)
#titanic$FamilyName <- factor(gsub(" ", "", titanic$FamilyName, fixed = TRUE))
#occurences <- table(unlist(titanic$FamilyName))
#titanic$FamilyNameCount <- occurences[titanic$FamilyName]
#rm(occurences)
#titanic$TravelsWithPartner <- ifelse(titanic$FamilyNameCount == 2,1,0)
#titanic$TravelsWithPartner <- factor(titanic$TravelsWithPartner)
#drops <- c("FamilyName", "FamilyNameCount")
#titanic <- titanic[, !(names(titanic) %in% drops)]
#rm(drops)
#Fill missing Ages with mean age
titanic$Age[is.na(titanic$Age)] <- mean(titanic$Age, na.rm = TRUE)
#Extract additional info from cabin
#titanic$CabinLetter <- substr(titanic$Cabin,1,1)
#titanic$CabinLetter <- factor(titanic$CabinLetter)
#levels(titanic$CabinLetter)[1] = "missing"
#levels(titanic$CabinLetter)
#titanic$CabinNumber <- gsub("A|B|C|D|E|F|G|T","", titanic$Cabin)
#titanic$CabinNumber <- as.numeric(titanic$CabinNumber)
#Extract additional info from tickets
titanic$TicketClass <- gsub('\\D+','', titanic$Ticket)
titanic$TicketClass <- substr(titanic$TicketClass,1,1)
titanic$TicketClass <- gsub('4|5|6|7|8|9','4', titanic$TicketClass)
#Missing Factor Levels
levels(titanic$Cabin)[1] = "missing"
levels(titanic$Embarked)[1] = "missing"
#Save data
write.csv(titanic, file = "./Data/train_p.csv")
#write.csv(titanic, file = "./Data/test_p.csv")
#Load dataset
setwd("~/Kaggle/Titanic/Machine-Learning-from-Disaster")
#titanic <- read.csv("./Data/train.csv")
titanic <- read.csv("./Data/test.csv")
#Extract Title
library(dplyr)
titanic$Title <- case_when(
grepl("Mrs.",titanic$Name) ~ "Mrs",
grepl("Mr.",titanic$Name) ~ "Mr",
grepl("Miss.",titanic$Name) ~ "Miss",
grepl("Master.",titanic$Name) ~ "Master",
grepl("Dr.",titanic$Name) ~ "Dr",
grepl("Rev.",titanic$Name) ~ "Rev",
TRUE ~ "Other"
)
#Extract familyname to match couples
#Pobably bad idea because wife neednt be in the same dataset
#titanic$Name <- as.character(titanic$Name)
#titanic$FamilyName <- case_when(
#  titanic$Title == "Mrs" ~ gsub("\\(.*", "", titanic$Name),
#  titanic$Title == "Mr" ~ titanic$Name,
#  TRUE ~ ""
#)
#titanic$FamilyName <- gsub("Mrs.","Mr.", titanic$FamilyName)
#titanic$FamilyName <- factor(gsub(" ", "", titanic$FamilyName, fixed = TRUE))
#occurences <- table(unlist(titanic$FamilyName))
#titanic$FamilyNameCount <- occurences[titanic$FamilyName]
#rm(occurences)
#titanic$TravelsWithPartner <- ifelse(titanic$FamilyNameCount == 2,1,0)
#titanic$TravelsWithPartner <- factor(titanic$TravelsWithPartner)
#drops <- c("FamilyName", "FamilyNameCount")
#titanic <- titanic[, !(names(titanic) %in% drops)]
#rm(drops)
#Fill missing Ages with mean age
titanic$Age[is.na(titanic$Age)] <- mean(titanic$Age, na.rm = TRUE)
#Extract additional info from cabin
#titanic$CabinLetter <- substr(titanic$Cabin,1,1)
#titanic$CabinLetter <- factor(titanic$CabinLetter)
#levels(titanic$CabinLetter)[1] = "missing"
#levels(titanic$CabinLetter)
#titanic$CabinNumber <- gsub("A|B|C|D|E|F|G|T","", titanic$Cabin)
#titanic$CabinNumber <- as.numeric(titanic$CabinNumber)
#Extract additional info from tickets
titanic$TicketClass <- gsub('\\D+','', titanic$Ticket)
titanic$TicketClass <- substr(titanic$TicketClass,1,1)
titanic$TicketClass <- gsub('4|5|6|7|8|9','4', titanic$TicketClass)
#Missing Factor Levels
levels(titanic$Cabin)[1] = "missing"
levels(titanic$Embarked)[1] = "missing"
#Save data
#write.csv(titanic, file = "./Data/train_p.csv")
write.csv(titanic, file = "./Data/test_p.csv")
#Prepare data
test$Pclass <- factor(test$Pclass)
#Load Data
setwd("~/Kaggle/Titanic/Machine-Learning-from-Disaster")
train <- read.csv("./Data/train_p.csv",header = TRUE, fileEncoding = "UTF-8")
#Prepare for model
train$Survived <- factor(train$Survived)
train$Pclass <- factor(train$Pclass)
train$TicketClass <- factor(train$TicketClass)
drops <- c("Ticket", "Name","Cabin", "Embarked")
train <- train[, !(names(train) %in% drops)]
rm(drops)
#Decision Tree
library(C50)
treeModel <- C5.0(train[, -c(1:3)], train$Survived, control = C5.0Control(minCases = 40))
summary(treeModel)
#Load test data
test <- read.csv("./Data/test_p.csv")
#Prepare data
test$Pclass <- factor(test$Pclass)
train$TicketClass <- factor(train$TicketClass)
drops <- c("Ticket", "Name","Cabin", "Embarked")
test <- test[, !(names(test) %in% drops)]
rm(drops)
#Evaluate Model
pred <- predict(treeModel, test[,-c(1:2)])
result <- data.frame(PassengerId=test$PassengerId, Survived=pred)
write.csv(result,file = "./Data/prediction.csv", row.names = FALSE)
treeModel <- C5.0(train[, -c(1:3)], train$Survived, control = C5.0Control(minCases = 20))
summary(treeModel)
treeModel <- C5.0(train[, -c(1:3)], train$Survived, control = C5.0Control(minCases = 15))
summary(treeModel)
#Load test data
test <- read.csv("./Data/test_p.csv")
#Prepare data
test$Pclass <- factor(test$Pclass)
train$TicketClass <- factor(train$TicketClass)
drops <- c("Ticket", "Name","Cabin", "Embarked")
test <- test[, !(names(test) %in% drops)]
rm(drops)
#Evaluate Model
pred <- predict(treeModel, test[,-c(1:2)])
result <- data.frame(PassengerId=test$PassengerId, Survived=pred)
write.csv(result,file = "./Data/prediction.csv", row.names = FALSE)
treeModel <- C5.0(train[, -c(1:3)], train$Survived, control = C5.0Control(minCases = 20))
summary(treeModel)
treeModel <- C5.0(train[, -c(1:3)], train$Survived, control = C5.0Control(minCases = 10))
summary(treeModel)
#Load test data
test <- read.csv("./Data/test_p.csv")
#Prepare data
test$Pclass <- factor(test$Pclass)
train$TicketClass <- factor(train$TicketClass)
drops <- c("Ticket", "Name","Cabin", "Embarked")
test <- test[, !(names(test) %in% drops)]
rm(drops)
#Evaluate Model
pred <- predict(treeModel, test[,-c(1:2)])
result <- data.frame(PassengerId=test$PassengerId, Survived=pred)
write.csv(result,file = "./Data/prediction.csv", row.names = FALSE)
treeModel <- C5.0(train[, -c(1:3)], train$Survived, control = C5.0Control(minCases = 20))
summary(treeModel)
treeModel <- C5.0(train[, -c(1:3)], train$Survived ) #,control = C5.0Control(minCases = 20)
summary(treeModel)
#Load test data
test <- read.csv("./Data/test_p.csv")
#Prepare data
test$Pclass <- factor(test$Pclass)
train$TicketClass <- factor(train$TicketClass)
drops <- c("Ticket", "Name","Cabin", "Embarked")
test <- test[, !(names(test) %in% drops)]
rm(drops)
#Evaluate Model
pred <- predict(treeModel, test[,-c(1:2)])
result <- data.frame(PassengerId=test$PassengerId, Survived=pred)
write.csv(result,file = "./Data/prediction.csv", row.names = FALSE)
treeModel <- C5.0(train[, -c(1:3)], train$Survived,control = C5.0Control(minCases = 40) )
summary(treeModel)
#SVM
library(kernlab)
svmModel <- ksvm(Survived ~.,data = train, kernel = "vanilladot")
#Load test data
test <- read.csv("./Data/test_p.csv")
#Prepare data
test$Pclass <- factor(test$Pclass)
train$TicketClass <- factor(train$TicketClass)
drops <- c("Ticket", "Name","Cabin", "Embarked")
test <- test[, !(names(test) %in% drops)]
rm(drops)
#Evaluate Model
pred <- predict(svmModel, test[,-c(1:2)])
#SVM
library(kernlab)
svmModel <- ksvm(Survived ~.,data = train, kernel = "vanilladot")
#Load test data
test <- read.csv("./Data/test_p.csv")
#Prepare data
test$Pclass <- factor(test$Pclass)
train$TicketClass <- factor(train$TicketClass)
drops <- c("Ticket", "Name","Cabin", "Embarked")
test <- test[, !(names(test) %in% drops)]
rm(drops)
#Evaluate Model
pred <- predict(svmModel, test[,-c(1:2)])
test1 <- train[, -c(1:3)]
test2 <- test[,-c(1:2)]
View(test1)
#Prepare data
test$Pclass <- factor(test$Pclass)
test$TicketClass <- factor(test$TicketClass)
drops <- c("Ticket", "Name","Cabin", "Embarked")
test <- test[, !(names(test) %in% drops)]
rm(drops)
#Evaluate Model
pred <- predict(svmModel, test[,-c(1:2)])
#Load Data
setwd("~/Kaggle/Titanic/Machine-Learning-from-Disaster")
train <- read.csv("./Data/train_p.csv",header = TRUE, fileEncoding = "UTF-8")
#Prepare for model
train$Survived <- factor(train$Survived)
train$Pclass <- factor(train$Pclass)
train$TicketClass <- factor(train$TicketClass)
drops <- c("Ticket", "Name","Cabin", "Embarked")
train <- train[, !(names(train) %in% drops)]
rm(drops)
#Decision Tree
library(C50)
treeModel <- C5.0(train[, -c(1:3)], train$Survived,control = C5.0Control(minCases = 40))
summary(treeModel)
#SVM
library(kernlab)
svmModel <- ksvm(Survived ~.,data = train, kernel = "vanilladot")
#Load test data
test <- read.csv("./Data/test_p.csv")
#Prepare data
test$Pclass <- factor(test$Pclass)
test$TicketClass <- factor(test$TicketClass)
drops <- c("Ticket", "Name","Cabin", "Embarked")
test <- test[, !(names(test) %in% drops)]
rm(drops)
#Evaluate Model
pred <- predict(svmModel, test[,-c(1:2)])
#Evaluate Model
pred <- predict(svmModel, test[,-c(2:2)])
#Evaluate Model
pred <- predict(svmModel, test[,-c(1:2)])
#Evaluate Model
pred <- predict(svmModel, test ) #test[,-c(1:2)]
result <- data.frame(PassengerId=test$PassengerId, Survived=pred)
